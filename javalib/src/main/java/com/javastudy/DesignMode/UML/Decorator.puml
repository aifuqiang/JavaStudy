@startuml
title 装饰者UML图
class Component{
 MethodA()
 MethodB()
}
class ConcreteComponent{
MethodA()
MethodB()
}
class Decorator{
MethodA()
MethodB()
}
class ConcreteDecoratorA{
Component wrappedObj
MethodA()
MethodB()
newBehavior()
}
class ConcreteDecoratorB{
Component wrappedObj
Object newState
MethodA()
MethodB()
}

note right of Component : 定义对象接口
note right of Decorator : 定义装饰者共同实现的接口\n（也可以是抽象类）
note right of ConcreteComponent : 定义被装饰者，装饰者可以动态地\n给被装饰者添加新行为
note right of ConcreteDecoratorA : 定义具体装饰者A，具体装饰者有一个\n实例变量wrappedObj，可以记录所装饰\n的事物（装饰者包装的Component），\n同时也可以扩展Component的状态
note right of ConcreteDecoratorB : 定义具体装饰者B，作用同装饰者A

Component<-- Decorator
Component<-- ConcreteComponent
Decorator<-- ConcreteDecoratorA
Decorator<-- ConcreteDecoratorB

@enduml